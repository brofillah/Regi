GIT-PUSH(1)                                                Git Manual                                               GIT-PUSH(1)

NNAAMMEE
       git-push - Update remote refs along with associated objects

SSYYNNOOPPSSIISS
       _g_i_t _p_u_s_h [--all | --mirror | --tags] [--follow-tags] [--atomic] [-n | --dry-run] [--receive-pack=<git-receive-pack>]
                  [--repo=<repository>] [-f | --force] [--prune] [-v | --verbose]
                  [-u | --set-upstream]
                  [--[no-]signed|--sign=(true|false|if-asked)]
                  [--force-with-lease[=<refname>[:<expect>]]]
                  [--no-verify] [<repository> [<refspec>...]]

DDEESSCCRRIIPPTTIIOONN
       Updates remote refs using local refs, while sending objects necessary to complete the given refs.

       You can make interesting things happen to a repository every time you push into it, by setting up _h_o_o_k_s there. See
       documentation for ggiitt--rreecceeiivvee--ppaacckk(1).

       When the command line does not specify where to push with the <repository> argument, branch.*.remote configuration for
       the current branch is consulted to determine where to push. If the configuration is missing, it defaults to _o_r_i_g_i_n.

       When the command line does not specify what to push with <refspec>... arguments or --all, --mirror, --tags options, the
       command finds the default <refspec> by consulting remote.*.push configuration, and if it is not found, honors
       push.default configuration to decide what to push (See ggiitt--ccoonnffiigg(1) for the meaning of push.default).

       When neither the command-line nor the configuration specify what to push, the default behavior is used, which
       corresponds to the simple value for push.default: the current branch is pushed to the corresponding upstream branch, but
       as a safety measure, the push is aborted if the upstream branch does not have the same name as the local one.

OOPPTTIIOONNSS
       <repository>
           The "remote" repository that is destination of a push operation. This parameter can be either a URL (see the section
           GIT URLS below) or the name of a remote (see the section REMOTES below).

       <refspec>...
           Specify what destination ref to update with what source object. The format of a <refspec> parameter is an optional
           plus +, followed by the source object <src>, followed by a colon :, followed by the destination ref <dst>.

           The <src> is often the name of the branch you would want to push, but it can be any arbitrary "SHA-1 expression",
           such as master~4 or HEAD (see ggiittrreevviissiioonnss(7)).

           The <dst> tells which ref on the remote side is updated with this push. Arbitrary expressions cannot be used here,
           an actual ref must be named. If git push [<repository>] without any <refspec> argument is set to update some ref at
           the destination with <src> with remote.<repository>.push configuration variable, :<dst> part can be omittedâ€”such a
           push will update a ref that <src> normally updates without any <refspec> on the command line. Otherwise, missing
           :<dst> means to update the same ref as the <src>.

           The object referenced by <src> is used to update the <dst> reference on the remote side. By default this is only
           allowed if <dst> is not a tag (annotated or lightweight), and then only if it can fast-forward <dst>. By having the
           optional leading +, you can tell Git to update the <dst> ref even if it is not allowed by default (e.g., it is not a
           fast-forward.) This does nnoott attempt to merge <src> into <dst>. See EXAMPLES below for details.

           tag <tag> means the same as refs/tags/<tag>:refs/tags/<tag>.

           Pushing an empty <src> allows you to delete the <dst> ref from the remote repository.

           The special refspec : (or +: to allow non-fast-forward updates) directs Git to push "matchi